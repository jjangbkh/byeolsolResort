<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="model.mapper.CustomerMapper">
  
  <insert id="insertCustomer" parameterType="Customer">
  <if test="addressDetail != null">
  insert into customer(user_id, password, name, email, zip_code, address, address_detail, phone, birth_date) 
  values(#{userId},#{password},#{name},#{email},#{zipCode},#{address},#{addressDetail},#{phone},#{birthDate})
  </if>
  
  <if test="addressDetail == null">
  insert into customer(user_id, password, name, email, zip_code, address, phone, birth_date) 
  values(#{userId},#{password},#{name},#{email},#{zipCode},#{address},#{phone},#{birthDate})
  </if>
  
  </insert>
  
  <select id="selectCustomer" resultType="Customer">
  select * from customer where user_id = #{userId} AND password = #{password}
  </select>
  
  <select id="selectCustomerList" resultType="Customer">
  select * from customer
  </select>
  
  <select id="selectCustomerWithId" resultType="Customer">
  select * from customer where user_id = #{userId}
  </select>
  
  <select id="selectCustomerWithEmail" resultType="Customer">
  select * from customer where email = #{email}
  </select>
  
  <update id="updateStateByEmail">
  update customer set email_state = #{emailCode} where email = #{email}
  </update>
  
  <select id="selectCustomerByEmailAndEmailState" resultType="Customer">
  select * from customer where email = #{email} and email_state = #{emailState}
  </select>
  
  <select id="selectCustomerByPhone" resultType="Customer">
  select * from customer where phone = #{phone}
  </select>
  
  <update id="updateCustomer" parameterType="Customer">
  update customer set password = #{password}, name=#{name}, zip_code=#{zipCode}, address=#{address}, address_detail=#{addressDetail},phone= #{phone},birth_date = #{birthDate}
   where id = #{id}
  </update>
  
  <delete id="deleteCustomerById">
  delete from customer where id = #{id}
  </delete>
  
  <select id="countCustomer" resultType="int">
  select count(*) from customer;
  </select>
  
  <select id="selectCustomerListWithLimit" resultType="Customer">
  select * from customer limit #{firstRow},#{customerCountPerPage}
  </select>
  
  
  </mapper>
